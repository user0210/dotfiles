  ## right settings

set ratios 3:7
set info size:time

cmd on-cd &{{
    printf "\033]0;[$(pwd | sed "s|$HOME|~|")]Lf\007" > /dev/tty
}}
on-cd
cmd open ${{
	tmux resizep -Z
    test -L $f && f=$(readlink -f $f)
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
	tmux resizep -Z
}}

  ## settings

set shell bash
set shellopts '-eu'
set ifs "\n"

set scrolloff 10
set hidden true
set ignorecase true
set icons true
set drawbox
set period 1

set previewer stpv
set cleaner stpvimgclr
&stpvimg --listen $id
cmd on-quit $stpvimg --end $id



  ## commands

cmd paste &{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    case "$mode" in
        copy)
			tmux split-window -fv -l 3 " \
				tput setab 19; tput ed
            	rsync -av --ignore-existing --progress -- \"$@\" . && sleep 2"
            ;;
        move) mv -n -- "$@" .;;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}
cmd delete ${{
	lines=$(($(echo "$fx" | wc -w)+2))
	files="${fx//$'\n'/ }"
	tmux split-window -fv -l ${lines} " \
		tput setab 19; tput ed
		printf \"$fx\n\"
		tput setaf 0; tput setab 1; tput bold
		printf \"\n delete [y/n] \" 
		read; tput sgr0; tput ed
		[ \$REPLY = "y" ] && trash-put $files
		lf -remote 'send reload'"
}}
cmd extract ${{
	lines=$(($(echo "$fx" | wc -w)+2))
	files="${fx//$'\n'/ }"
	tmux split-window -fv -l ${lines} " \
		tput setab 19; tput ed
		printf \"%s\n\t\" \"$fx\"
		tput setaf 0; tput setab 1; tput bold
		printf \"\n extract [y/N] \"
		read; tput sgr0; tput ed
		[ \$REPLY = "y" ] && aunpack $files
		lf -remote 'send reload'"
}}
cmd chmod ${{
	lines=$(($(echo "$fx" | wc -w)+2))
	files="${fx//$'\n'/ }"
	tmux split-window -fv -l ${lines} " \
		tput setab 19; tput ed
		printf \"$fx\n\"
		tput setaf 0; tput setab 1; tput bold
		printf \"\n Mode Bits: \"
		read; tput sgr0; tput ed
		for file in $files; do chmod \$REPLY \$file; done
		lf -remote 'send reload'"
}}
cmd goto ${{
	tmux split-window -fv -l 8 ' \
		find . | fzf --reverse --header='\''jump to location'\'' | read && \
		if [ -f "$REPLY" ]; then
			cmd="select"
		elif [ -d "$REPLY" ]; then
			cmd="cd"
		fi
		lf -remote "send $id $cmd $REPLY"'
}}
cmd broot ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
  	lf -remote "send $id select \"$res\""
  elif [ -d "$res" ]; then
  	lf -remote "send $id cd \"$res\""
  fi
}}
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
cmd mkdir %{{
    IFS=" "
    mkdir -p -- "$*"
    lf -remote "send $id select \"$*\""
}}
cmd mkfile ${{
    $EDITOR $(pwd)/"$*"
}}
cmd bulkrename $vidir



  ## keymaps

map <enter> shell

map x $$f
map X !$f

map o &mimeopen $f
map O $mimeopen --ask $f

map <delete> delete
map D delete

map y
map yy copy
map yp $printf "%s" "$fx" | xclip -i -selection clipboard
map yn $basename -a -- $fx | head -c-1 | xclip -i -selection clipboard

map f
map f goto

map F
map F broot
